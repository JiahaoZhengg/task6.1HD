{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ben\\\\Desktop\\\\task8.1D\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ben\\\\Desktop\\\\task8.1D\\\\src\\\\Question.jsx\";\nimport React, { useState } from \"react\";\nimport { db } from \"./utils/firebase.js\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport \"./Question.css\";\nvar Q_A = collection(db, \"Q_A\");\n\nfunction Question() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      describe = _useState4[0],\n      setDescribe = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tags = _useState6[0],\n      setTags = _useState6[1];\n\n  var postQuestion = function postQuestion() {\n    addDoc(Q_A, {\n      type: 0,\n      title: title,\n      describe: describe,\n      tags: tags\n    }).then(function (result) {\n      console.log(result);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: title,\n    onChange: function onChange(e) {\n      return setTitle(e.target.value);\n    },\n    className: \"Title\",\n    placeholder: \"Start your question with how, what,why,etc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      float: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Describe your problem\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: describe,\n    onChange: function onChange(e) {\n      return setDescribe(e.target.value);\n    },\n    className: \"problem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Tags:\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: tags.join(\",\"),\n    onChange: function onChange(e) {\n      return setTags(e.target.value.split(\",\"));\n    },\n    className: \"Title\",\n    placeholder: \"Please add up to 3 tags describe what your question is about e.g.,Java \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"post\",\n    onClick: postQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Post\")));\n}\n\nexport default Question;","map":{"version":3,"names":["React","useState","db","collection","addDoc","Q_A","Question","title","setTitle","describe","setDescribe","tags","setTags","postQuestion","type","then","result","console","log","catch","error","e","target","value","float","join","split"],"sources":["C:/Users/ben/Desktop/task8.1D/src/Question.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { db } from \"./utils/firebase.js\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\n\r\nimport \"./Question.css\";\r\n\r\nconst Q_A = collection(db, \"Q_A\");\r\n\r\nfunction Question() {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [describe, setDescribe] = useState(\"\");\r\n    const [tags, setTags] = useState([]);\r\n\r\n    const postQuestion = () => {\r\n        addDoc(Q_A, {\r\n            type: 0,\r\n            title,\r\n            describe,\r\n            tags\r\n        }).then(result => {\r\n            console.log(result);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"t1\">\r\n                <h4>Title:</h4>\r\n                <input value={title} onChange={e => setTitle(e.target.value)} className=\"Title\" placeholder=\"Start your question with how, what,why,etc\" />\r\n            </div>\r\n            <div className=\"t2\">\r\n                <h4 style={{ float: \"left\" }}>Describe your problem</h4>\r\n                <textarea value={describe} onChange={e => setDescribe(e.target.value)} className=\"problem\"></textarea>\r\n                <div className=\"t3\">\r\n                    <h4>Tags:</h4>\r\n                    <input value={tags.join(\",\")} onChange={e => setTags(e.target.value.split(\",\"))} className=\"Title\" placeholder=\"Please add up to 3 tags describe what your question is about e.g.,Java \" />\r\n                </div>\r\n                <button className=\"post\" onClick={postQuestion}>Post</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question;"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,EAAT,QAAmB,qBAAnB;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,oBAAnC;AAEA,OAAO,gBAAP;AAEA,IAAMC,GAAG,GAAGF,UAAU,CAACD,EAAD,EAAK,KAAL,CAAtB;;AAEA,SAASI,QAAT,GAAoB;EAAA,gBACUL,QAAQ,CAAC,EAAD,CADlB;EAAA;EAAA,IACTM,KADS;EAAA,IACFC,QADE;;EAAA,iBAEgBP,QAAQ,CAAC,EAAD,CAFxB;EAAA;EAAA,IAETQ,QAFS;EAAA,IAECC,WAFD;;EAAA,iBAGQT,QAAQ,CAAC,EAAD,CAHhB;EAAA;EAAA,IAGTU,IAHS;EAAA,IAGHC,OAHG;;EAKhB,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;IACvBT,MAAM,CAACC,GAAD,EAAM;MACRS,IAAI,EAAE,CADE;MAERP,KAAK,EAALA,KAFQ;MAGRE,QAAQ,EAARA,QAHQ;MAIRE,IAAI,EAAJA;IAJQ,CAAN,CAAN,CAKGI,IALH,CAKQ,UAAAC,MAAM,EAAI;MACdC,OAAO,CAACC,GAAR,CAAYF,MAAZ;IACH,CAPD,EAOGG,KAPH,CAOS,UAAAC,KAAK,EAAI;MACdH,OAAO,CAACC,GAAR,CAAYE,KAAZ;IACH,CATD;EAUH,CAXD;;EAaA,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,IAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YADJ,eAEI;IAAO,KAAK,EAAEb,KAAd;IAAqB,QAAQ,EAAE,kBAAAc,CAAC;MAAA,OAAIb,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;IAAA,CAAhC;IAA8D,SAAS,EAAC,OAAxE;IAAgF,WAAW,EAAC,4CAA5F;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CADJ,eAKI;IAAK,SAAS,EAAC,IAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAI,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAT,CAAX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,2BADJ,eAEI;IAAU,KAAK,EAAEf,QAAjB;IAA2B,QAAQ,EAAE,kBAAAY,CAAC;MAAA,OAAIX,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;IAAA,CAAtC;IAAuE,SAAS,EAAC,SAAjF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,eAGI;IAAK,SAAS,EAAC,IAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WADJ,eAEI;IAAO,KAAK,EAAEZ,IAAI,CAACc,IAAL,CAAU,GAAV,CAAd;IAA8B,QAAQ,EAAE,kBAAAJ,CAAC;MAAA,OAAIT,OAAO,CAACS,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeG,KAAf,CAAqB,GAArB,CAAD,CAAX;IAAA,CAAzC;IAAiF,SAAS,EAAC,OAA3F;IAAmG,WAAW,EAAC,yEAA/G;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,CAHJ,eAOI;IAAQ,SAAS,EAAC,MAAlB;IAAyB,OAAO,EAAEb,YAAlC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,UAPJ,CALJ,CADJ;AAiBH;;AAED,eAAeP,QAAf"},"metadata":{},"sourceType":"module"}